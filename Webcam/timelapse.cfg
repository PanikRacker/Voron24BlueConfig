[delayed_gcode TIMELAPSE_INIT]
initial_duration: 1
gcode:
    SAVE_VARIABLE VARIABLE=timelapse_active VALUE={False}
    UPDATE_DELAYED_GCODE ID=TIMELAPSE_CLEANUP_ALL DURATION=2

[gcode_macro TIMELAPSE_START]
gcode:
    {% set state = printer.save_variables.variables.lightswitch_state | int %}
    {% set lock_state = printer.save_variables.variables.lightswitch_lock_state | int %}
    {% if state == 1 and lock_state == 1 %}
        SAVE_VARIABLE VARIABLE=timelapse_active VALUE={True}
        RESPOND PREFIX=timelapse MSG=start
    {% else %}
        _DEBUG MSG="Timelapse inactive. Switch lights on and restart capturing if desired."
    {% endif %}

[gcode_macro TIMELAPSE_STOP]
gcode:
    {% set cleanup_delay = params.CLEANUP_DELAY | default(1) | int %}
    {% if printer.save_variables.variables.timelapse_active %}
        RESPOND PREFIX=timelapse MSG=stop
        SAVE_VARIABLE VARIABLE=timelapse_active VALUE={False}
        UPDATE_DELAYED_GCODE ID=TIMELAPSE_CHECK_RESUME DURATION=0
        UPDATE_DELAYED_GCODE ID=TIMELAPSE_CLEANUP_IMAGES DURATION={cleanup_delay}
    {% endif %}

[gcode_macro TIMELAPSE_PAUSE]
gcode:
    {% if printer.save_variables.variables.timelapse_active %}
        RESPOND PREFIX=timelapse MSG=pause
        UPDATE_DELAYED_GCODE ID=TIMELAPSE_CHECK_RESUME DURATION=30
    {% endif %}

[gcode_macro TIMELAPSE_RESUME]
gcode:
    {% if printer.save_variables.variables.timelapse_active %}
        UPDATE_DELAYED_GCODE ID=TIMELAPSE_CHECK_RESUME DURATION=0
        RESPOND PREFIX=timelapse MSG=resume
    {% endif %}

[gcode_macro TIMELAPSE_CREATE]
gcode:
    {% set delay = params.DELAY | default(1) | int %}
    {% set cleanup_delay = params.CLEANUP_DELAY | default(30) | int %}
    {% if printer.save_variables.variables.timelapse_active %}
        RESPOND PREFIX=timelapse MSG=stop
        SAVE_VARIABLE VARIABLE=timelapse_active VALUE={False}
        UPDATE_DELAYED_GCODE ID=TIMELAPSE_CREATE DURATION={delay}
        UPDATE_DELAYED_GCODE ID=TIMELAPSE_CLEANUP_IMAGES DURATION={cleanup_delay}
    {% endif %}

[delayed_gcode TIMELAPSE_CREATE]
gcode:
    RESPOND PREFIX=timelapse MSG=create

[delayed_gcode TIMELAPSE_CHECK_RESUME]
gcode:
    {% if printer['pause_resume'].is_paused == False %}
        TIMELAPSE_RESUME
    {% else %}
        UPDATE_DELAYED_GCODE ID=TIMELAPSE_CHECK_RESUME DURATION=30
    {% endif %}
