[output_pin daylight]
pin: PD15
#   The pin to configure as an output. This parameter must be
#   provided.
pwm: True
#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime. A static pin uses
#   slightly less ram in the micro-controller. The default is to use
#   runtime configuration of pins.
value: 0.05
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
shutdown_value: 0
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
#maximum_mcu_duration: 5
#   The maximum duration a non-shutdown value may be driven by the MCU
#   without an acknowledge from the host.
#   If host can not keep up with an update, the MCU will shutdown
#   and set all pins to their respective shutdown values.
#   Default: 0 (disabled)
#   Usual values are around 5 seconds.
cycle_time: 0.01
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.

[delayed_gcode DAYLIGHT_INIT]
initial_duration: 1
gcode:
    # SAVE_VARIABLE VARIABLE=daylight_state VALUE=1
    SWITCH_OFF_DAYLIGHT DELAY=60

# [gcode_macro _handle_daylight_state]
# gcode:
#     {% set state = params.STATE | int %}
#     SAVE_VARIABLE VARIABLE=daylight_state VALUE={state}

# [gcode_macro _TOGGLE_DAYLIGHT]
# variable_value: 0
# gcode:
#     {% set state = params.VALUE | int %}
#     {% if state %}
#         UPDATE_DELAYED_GCODE ID=SWITCH_OFF_DAYLIGHT_ACTION DURATION=0
#         {% if "daylight_state" in printer.save_variables.variables and printer.save_variables.variables.daylight_state == 0 %}
#             SWITCH_ON_DAYLIGHT BRIGHTNESS=90
#             _DEBUG MSG="Telegram bot switched on daylight"
#         {% endif %}
#     {% else %}
#         SWITCH_OFF_DAYLIGHT
#         _DEBUG MSG="Telegram bot switched off daylight"
#     {% endif %}
#     SET_GCODE_VARIABLE MACRO=_TOGGLE_DAYLIGHT VARIABLE=value value={state}

[gcode_macro SWITCH_ON_DAYLIGHT]
gcode:
    # {% set delay = params.DELAY | default(1) | int %}
    {% set brightness = params.BRIGHTNESS | float %}
    {% set brightness_default = 0.15 | float %}
    {% set brightness_target = ((brightness_default * (brightness * 0.01)) if (brightness >= 1 and brightness <= 100) else brightness_default) | float %}
    # UPDATE_DELAYED_GCODE ID=SWITCH_OFF_DAYLIGHT_ACTION DURATION={delay}
    # _handle_daylight_state STATE=1
    _set_daylight_leds BRIGHTNESS={brightness_target}

[gcode_macro SWITCH_OFF_DAYLIGHT]
gcode:
    {% set delay = params.DELAY | default(1) | int %}
    {% if delay == 1 %}
        _set_daylight_leds BRIGHTNESS=0.0
    {% else %}
        UPDATE_DELAYED_GCODE ID=SWITCH_OFF_DAYLIGHT_DELAYED DURATION={delay}
    {% endif %}

[delayed_gcode SWITCH_OFF_DAYLIGHT_DELAYED]
gcode:
    # _handle_daylight_state STATE=0
    _set_daylight_leds BRIGHTNESS=0.0

[gcode_macro _CANCEL_ACTIVE_SWITCH_OFF_DAYLIGHT_DELAYED]
gcode:
    UPDATE_DELAYED_GCODE ID=SWITCH_OFF_DAYLIGHT_ACTION DURATION=0

[gcode_macro _set_daylight_leds]
gcode:
    {% set brightness_max = 0.5 | float %}
    {% set brightness = params.BRIGHTNESS | float | default(brightness_max) | round(2, 'floor') | float %}
    {% if brightness > brightness_max %}
        {% set brightness = brightness_max %}
    {% endif %}
    SET_PIN PIN=daylight VALUE={brightness}
