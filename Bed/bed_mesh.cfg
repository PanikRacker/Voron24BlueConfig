[bed_mesh]
speed: 150
horizontal_move_z: 10
mesh_min: 18,0
mesh_max: 288,252
zero_reference_position: 150,150 #for use with stock z endstop
fade_start: 0.6
fade_end: 10.0
probe_count: 9,9 # Values should be odd, so one point is directly at bed center
mesh_pps: 2,2
algorithm: bicubic
move_check_distance: 3
split_delta_z: 0.0125
mesh_pps: 2,2
#bicubic_tension: 0.2

[delayed_gcode BED_MESH_INIT]
initial_duration: 1
gcode:
    _BED_MESH_RESET

[gcode_macro _BED_MESH_RESET]
gcode:
    _BED_MESH_PROFILE_RESET
    _BED_MESH_SKIP_RESET

[gcode_macro _BED_MESH_PROFILE_RESET]
gcode:
    SAVE_VARIABLE VARIABLE=bed_mesh_profile VALUE='"null"'

[gcode_macro BED_MESH_SKIP]
gcode:
    {% set profile = params.LOAD | default("null") %}
    {% if printer.idle_timeout.state != "Printing" %}
        SAVE_VARIABLE VARIABLE=bed_mesh_skip VALUE={True}
        {% if profile != "null" %}
            _BED_MESH_LOAD PROFILE={profile}
        {% endif %}
    {% endif %}

[gcode_macro _BED_MESH_SKIP_RESET]
gcode:
    SAVE_VARIABLE VARIABLE=bed_mesh_skip VALUE={False}

[gcode_macro _BED_MESH_LOAD]
gcode:
    {% set profile = params.PROFILE | default("default") %}
    _BED_MESH_PROFILE_RESET
    {% if profile in printer.bed_mesh.profiles %}
        _DEBUG MSG="Load bed mesh profile '{profile}'"
        SAVE_VARIABLE VARIABLE=bed_mesh_profile VALUE='"{profile}"'
        BED_MESH_PROFILE LOAD={profile}
        BED_MESH_OUTPUT PGP=0
    {% else %}
        _DEBUG MSG="Bed mesh profile '{profile}' not found"
    {% endif %}

[gcode_macro _BED_MESH_CREATE]
gcode:
    {% set size = params.SIZE | default("0_0_0_0") | string %}
    {% set force = (params.FORCE | default(False)) or (printer.save_variables.variables.bed_mesh_skip == False) %}
    _status_meshing
    _DEBUG MSG="Creating new 'default' bed mesh"
    ADAPTIVE_BED_MESH SIZE={size} FORCE_MESH={(1 if force else 0)}
    _BED_MESH_LOAD

# [delayed_gcode BED_MESH_CREATE_DELAYED]
# gcode:
#     {% if profile != printer.save_variables.variables.bed_mesh_profile %}
#         _BED_MESH_CREATE SIZE={printer.save_variables.variables.bed_mesh_size}
#     {% endif %}

[gcode_macro _BED_MESH_LOAD_OR_CREATE]
gcode:
    {% set profile = params.LOAD | default("default") %}
    {% set size = params.SIZE | default("0_0_0_0") | string %}
    {% set is_reprint = params.REPRINT | default(False) %}
    # SAVE_VARIABLE VARIABLE=bed_mesh_size VALUE={size}
    {% if is_reprint or printer.save_variables.variables.bed_mesh_skip %}
        _DEBUG MSG="Reprinting last job or explicitly skip creating new mesh. Try load existing mesh."
        _BED_MESH_LOAD PROFILE={profile}
    {% endif %}
    {% if profile != printer.save_variables.variables.bed_mesh_profile %}
        _BED_MESH_CREATE SIZE={size}
    {% endif %}

[gcode_macro BED_MESH_FORCE]
gcode:
    {% if printer.idle_timeout.state != "Printing" %}
        BED_MESH_CLEAR
        _BED_MESH_RESET
        _BED_MESH_SKIP_RESET
        _PRINT_START_RESET
    {% endif %}
